<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-06T18:34:20-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">This Timeline</title><subtitle>This site is my personal blog intended to capture whatever I think is worth writing.  Some things about my career, being a father, being a spouse and a human living right now.</subtitle><entry><title type="html">GitHub Pages and Jekyll</title><link href="http://localhost:4000/jekyll/update/2022/02/05/GitHub_Pages_and_Jekyll.html" rel="alternate" type="text/html" title="GitHub Pages and Jekyll" /><published>2022-02-05T21:13:01-07:00</published><updated>2022-02-05T21:13:01-07:00</updated><id>http://localhost:4000/jekyll/update/2022/02/05/GitHub_Pages_and_Jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/02/05/GitHub_Pages_and_Jekyll.html">&lt;p&gt;Wow.  I have spent an inordinately long amount of time trying to get Jekyll working with &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;.  GH Pages is a fantastic product and usually super easy to use but something about it’s function with Jekyll creates a weird nuance I don’t understand.&lt;/p&gt;

&lt;p&gt;First I played with folder structure.  A blog post I read indicated one issue was not having CSS in the root directory structure with main.css under it.  Moving it didn’t fix anything and while I haven’t removed it yet, I suspect it actually does nothing right now.&lt;/p&gt;

&lt;p&gt;I tried commenting in lines in config.yml for “root” or for “css” or “link” to reference a stylesheet and none of those did anything.&lt;/p&gt;

&lt;p&gt;Finally I stumbled on an [article][article-baseurl] walking config.yml in more detail once I noticed empty url and baseurl fields.  Well, this article is USEFUL but not the final story.  While Michael’s explanations for baseurl and url are correct, they didn’t work for me.  Injecting, as suggested&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;baseurl: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://th3incredibl3hulk.github.io&quot;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;url: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/seven_timelines&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;simply yields this URL structure for me:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;th3incredibl3hulk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seven_timelines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;th3incredibl3hulk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seven_timelines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rest_of_your_site_pages&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Don’t ask me why, but it did.&lt;/p&gt;

&lt;p&gt;After mucking with it for a while, I landed on this successfully:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;baseurl: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;url: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/seven_timelines&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now everything is FINALLY functioning as expected.  CSS is loading, site pages are referenceable and it still builds locally as well.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Wow. I have spent an inordinately long amount of time trying to get Jekyll working with GitHub Pages. GH Pages is a fantastic product and usually super easy to use but something about it’s function with Jekyll creates a weird nuance I don’t understand.</summary></entry><entry><title type="html">Exploring Jekyll</title><link href="http://localhost:4000/jekyll/update/2021/11/18/Exploring-Jekyll.html" rel="alternate" type="text/html" title="Exploring Jekyll" /><published>2021-11-18T20:40:01-07:00</published><updated>2021-11-18T20:40:01-07:00</updated><id>http://localhost:4000/jekyll/update/2021/11/18/Exploring-Jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2021/11/18/Exploring-Jekyll.html">&lt;p&gt;This is my first post in Jekyll!  I actually heard about this blogging tech from &lt;a href=&quot;https://twitter.com/JackRhysider&quot;&gt;@jackrhysider&lt;/a&gt;, the infosec guru that he is.  He uses it for his own personal blog and I decided to give it a whirl for me as well. I’ve never found another piece of tech that gives good functionality and also minimal upkeep needed.&lt;/p&gt;

&lt;p&gt;So far, I’ve only played with the basic setup and this post!  Going to explore some formatting next!  Not sure what aesthetic I want yet so we’ll see what the internet has to offer.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">This is my first post in Jekyll! I actually heard about this blogging tech from @jackrhysider, the infosec guru that he is. He uses it for his own personal blog and I decided to give it a whirl for me as well. I’ve never found another piece of tech that gives good functionality and also minimal upkeep needed. So far, I’ve only played with the basic setup and this post! Going to explore some formatting next! Not sure what aesthetic I want yet so we’ll see what the internet has to offer.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2021/11/14/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-11-14T20:25:01-07:00</published><updated>2021-11-14T20:25:01-07:00</updated><id>http://localhost:4000/jekyll/update/2021/11/14/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2021/11/14/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format: YEAR-MONTH-DAY-title.MARKUP Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts &quot;Hi, #{name}&quot; end print_hi('Tom') #=&amp;gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.</summary></entry></feed>